# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Web Api - Deploy

on:
  push:
    branches:
      - main
    paths:
      - SolenLmsApp/Api/**
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: solenlmsdemoapi
  STARTUP_PROJECT_PATH: 'SolenLmsApp/Api/Startup/WebApi/WebApi.Startup.csproj'
  COURSE_MANAGEMENT_INFRASTRUCTURE_PROJECT_PATH: 'SolenLmsApp/Api/CourseManagement/Src/CourseManagement.csproj'
  COURSE_MANAGEMENT_TESTS_PROJECT_PATH: 'SolenLmsApp/Api/CourseManagement/Tests/CourseManagement.Tests.csproj'
  LEARNING_INFRASTRUCTURE_PROJECT_PATH: 'SolenLmsApp/Api/Learning/Src/Learning.csproj'
  LEARNING_TESTS_PROJECT_PATH: 'SolenLmsApp/Api/Learning/Tests/Learning.Tests.csproj'
  RESOURCES_INFRASTRUCTURE_PROJECT_PATH: 'SolenLmsApp/Api/Resources/Src/Resources.csproj'
  DOTNET_VERSION: '7.x'

jobs:
  build:
    runs-on: ubuntu-latest #required to run sql server image in docker

    steps:
      - uses: actions/checkout@v2

      - name: Rename appsettings.template.json to appsettings.json (required to execute migrations scripts)
        run: mv SolenLmsApp/Api/Startup/WebApi/appsettings.template.json SolenLmsApp/Api/Startup/WebApi/appsettings.json

      - name: installing ffmpeg
        run: sudo apt-get install -y ffmpeg

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build ${{env.STARTUP_PROJECT_PATH}} --configuration Release

      - name: dotnet publish
        run: dotnet publish ${{env.STARTUP_PROJECT_PATH}} -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: pull sql server image
        run: docker pull mcr.microsoft.com/mssql/server:2022-latest

      - name: testing course management module
        run: dotnet test -c Release ${{env.COURSE_MANAGEMENT_TESTS_PROJECT_PATH}}

      - name: testing learning module
        run: dotnet test -c Release ${{env.LEARNING_TESTS_PROJECT_PATH}}

      - name: Install EntityFrameworkCore Tools
        run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-ef

      - name: Generate Course Management Migration Script
        run: dotnet ef migrations script --idempotent --no-build --configuration Release --output ${{env.DOTNET_ROOT}}/sql/course-management-sql-script.sql --context CourseManagementDbContext -p ${{env.COURSE_MANAGEMENT_INFRASTRUCTURE_PROJECT_PATH}} -s ${{env.STARTUP_PROJECT_PATH}}

      - name: Generate Learning Migration Script
        run: dotnet ef migrations script --idempotent --no-build --configuration Release --output ${{env.DOTNET_ROOT}}/sql/learning-sql-script.sql --context LearningDbContext -p ${{env.LEARNING_INFRASTRUCTURE_PROJECT_PATH}} -s ${{env.STARTUP_PROJECT_PATH}}

      - name: Generate Resources Migration Script
        run: dotnet ef migrations script --idempotent --no-build --configuration Release --output ${{env.DOTNET_ROOT}}/sql/resources-sql-script.sql --context ResourcesDbContext -p ${{env.RESOURCES_INFRASTRUCTURE_PROJECT_PATH}} -s ${{env.STARTUP_PROJECT_PATH}}

      - name: Uploading app artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

      - name: Uploading sql scripts for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: sql-scripts
          path: ${{env.DOTNET_ROOT}}/sql/*.sql
  
  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Demo'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3

      - name: Course Management SQL Deploy
        uses: Azure/sql-action@v2
        with:
          connection-string: ${{ secrets.SQL_CONNECTION_STRING_API_DEMO }}
          path: ./sql-scripts/course-management-sql-script.sql

      - name: Learning SQL Deploy
        uses: Azure/sql-action@v2
        with:
          connection-string: ${{ secrets.SQL_CONNECTION_STRING_API_DEMO }}
          path: ./sql-scripts/learning-sql-script.sql

      - name: Resources SQL Deploy
        uses: Azure/sql-action@v2
        with:
          connection-string: ${{ secrets.SQL_CONNECTION_STRING_API_DEMO }}
          path: ./sql-scripts/resources-sql-script.sql

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_API_DEMO }}
          package: ./.net-app/

