// <auto-generated />
using System;
using Imanys.SolenLms.Application.CourseManagement.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imanys.SolenLms.Application.CourseManagement.Infrastructure.Data.Migrations
{
    [DbContext(typeof(CourseManagementDbContext))]
    partial class CourseManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("CourseManagement")
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Courses.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("InstructorId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Courses", "CourseManagement");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Courses.Entities.Lecture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("ResourceId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ResourceId");

                    b.ToTable("Lecture", "CourseManagement");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Courses.Entities.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Module", "CourseManagement");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.CoursesCategories.Entities.CourseCategory", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CourseCategories", "CourseManagement");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Categories", "CourseManagement");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Instructors.SyncEntities.Instructor", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Instructors", "CourseManagement");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Learners.SyncEntities.Learner", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Learners", "CourseManagement");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.LearnersProgress.SyncEntities.LearnerCourseProgress", b =>
                {
                    b.Property<string>("LearnerId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastAccessTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("Progress")
                        .HasColumnType("real");

                    b.HasKey("LearnerId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("LearnerProgress", "CourseManagement");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Courses.Entities.Course", b =>
                {
                    b.HasOne("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Instructors.SyncEntities.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Courses.Entities.Lecture", b =>
                {
                    b.HasOne("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Courses.Entities.Module", null)
                        .WithMany("Lectures")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Courses.Entities.Module", b =>
                {
                    b.HasOne("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Courses.Entities.Course", null)
                        .WithMany("Modules")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.CoursesCategories.Entities.CourseCategory", b =>
                {
                    b.HasOne("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Courses.Entities.Course", "Course")
                        .WithMany("Categories")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.LearnersProgress.SyncEntities.LearnerCourseProgress", b =>
                {
                    b.HasOne("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Courses.Entities.Course", null)
                        .WithMany("LearnersProgress")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Learners.SyncEntities.Learner", null)
                        .WithMany("CoursesProgress")
                        .HasForeignKey("LearnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Courses.Entities.Course", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("LearnersProgress");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Courses.Entities.Module", b =>
                {
                    b.Navigation("Lectures");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.CourseManagement.Core.Domain.Learners.SyncEntities.Learner", b =>
                {
                    b.Navigation("CoursesProgress");
                });
#pragma warning restore 612, 618
        }
    }
}
