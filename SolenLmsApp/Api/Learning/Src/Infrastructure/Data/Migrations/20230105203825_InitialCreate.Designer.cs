// <auto-generated />
using System;
using Imanys.SolenLms.Application.Learning.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imanys.SolenLms.Application.Learning.Infrastructure.Data.Migrations
{
    [DbContext(typeof(LearningDbContext))]
    [Migration("20230105203825_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Learning")
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.Bookmarks.Entities.BookmarkedCourse", b =>
                {
                    b.Property<string>("LearnerId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CourseId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("LearnerId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("BookmarkedCourse", "Learning");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.Categories.SyncEntities.Category", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Categories", "Learning");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.Courses.Entities.Course", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("InstructorId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("IsPublished");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Courses", "Learning");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.Courses.Entities.Lecture", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ModuleId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("ResourceId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("Lecture", "Learning");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.Courses.Entities.Module", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Module", "Learning");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.CoursesCategories.Entities.CourseCategory", b =>
                {
                    b.Property<string>("CourseId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CourseCategories", "Learning");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.Instructors.SyncEntities.Instructor", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Instructors", "Learning");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.Learners.SyncEntities.Learner", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Learners", "Learning");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.LearnersProgress.Entities.LearnerCourseAccess", b =>
                {
                    b.Property<string>("LearnerId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LectureId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("AccessTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.HasKey("LearnerId", "LectureId");

                    b.HasIndex("LectureId");

                    b.ToTable("LearnerCourseAccess", "Learning");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.LearnersProgress.Entities.LearnerCourseProgress", b =>
                {
                    b.Property<string>("LearnerId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CourseId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("LastAccessTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("Progress")
                        .HasColumnType("real");

                    b.HasKey("LearnerId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("LearnerCourseProgress", "Learning");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.Bookmarks.Entities.BookmarkedCourse", b =>
                {
                    b.HasOne("Imanys.SolenLms.Application.Learning.Core.Domain.Courses.Entities.Course", null)
                        .WithMany("LearnersBookmarks")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.Courses.Entities.Course", b =>
                {
                    b.HasOne("Imanys.SolenLms.Application.Learning.Core.Domain.Categories.SyncEntities.Category", null)
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Imanys.SolenLms.Application.Learning.Core.Domain.Instructors.SyncEntities.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.Courses.Entities.Lecture", b =>
                {
                    b.HasOne("Imanys.SolenLms.Application.Learning.Core.Domain.Courses.Entities.Module", "Module")
                        .WithMany("Lectures")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.Courses.Entities.Module", b =>
                {
                    b.HasOne("Imanys.SolenLms.Application.Learning.Core.Domain.Courses.Entities.Course", "Course")
                        .WithMany("Modules")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.CoursesCategories.Entities.CourseCategory", b =>
                {
                    b.HasOne("Imanys.SolenLms.Application.Learning.Core.Domain.Categories.SyncEntities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imanys.SolenLms.Application.Learning.Core.Domain.Courses.Entities.Course", "Course")
                        .WithMany("Categories")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.LearnersProgress.Entities.LearnerCourseAccess", b =>
                {
                    b.HasOne("Imanys.SolenLms.Application.Learning.Core.Domain.Learners.SyncEntities.Learner", "Learner")
                        .WithMany()
                        .HasForeignKey("LearnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imanys.SolenLms.Application.Learning.Core.Domain.Courses.Entities.Lecture", "Lecture")
                        .WithMany()
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Learner");

                    b.Navigation("Lecture");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.LearnersProgress.Entities.LearnerCourseProgress", b =>
                {
                    b.HasOne("Imanys.SolenLms.Application.Learning.Core.Domain.Courses.Entities.Course", "Course")
                        .WithMany("LearnersProgress")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imanys.SolenLms.Application.Learning.Core.Domain.Learners.SyncEntities.Learner", "Learner")
                        .WithMany()
                        .HasForeignKey("LearnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Learner");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.Categories.SyncEntities.Category", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.Courses.Entities.Course", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("LearnersBookmarks");

                    b.Navigation("LearnersProgress");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("Imanys.SolenLms.Application.Learning.Core.Domain.Courses.Entities.Module", b =>
                {
                    b.Navigation("Lectures");
                });
#pragma warning restore 612, 618
        }
    }
}
