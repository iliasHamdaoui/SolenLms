<div class="row" @onclick="OnCourseSelected" style="cursor:pointer">
    <div class="col-12 p-0">
        <div class="card bg-light p-3 mb-3 shadow">
            <div class="d-flex justify-content-between align-items-baseline">
                <h3>@Course.Title</h3>

                <span @onclick="ToggleBookmark" @onclick:stopPropagation="true" style="cursor:pointer">@((MarkupString)BookmarkIcon)</span>

            </div>
            <div class="d-flex justify-content-between align-items-baseline">

                <div class="ms-2 c-details">

                    <h6 class="mb-0">
                        <i class="fas fa-regular fa-user me-1"></i>@Course.InstructorName
                    </h6>
                    <span>
                        <i class="fas fa-solid fa-hourglass-half me-2"></i>@Course.Duration.ToHours()
                    </span>
                    <span style="display:block">
                        <i class="fas fa-solid fa-calendar me-2" title="Published on"></i>@Course.PublicationDate.ToString("dd/MM/yyyy HH:mm")
                    </span>
                </div>

                <div class="d-flex flex-column justify-content-center align-items-center">
                    @foreach (var category in Course.Categories)
                    {
                        <div>
                            <span class="badge rounded-pill bg-secondary">@category</span>
                        </div>
                    }
                </div>
            </div>
            <div>
                <div class="mt-1 d-flex align-items-center justify-content-between">
                    @if (LearnerProgress > 0)
                    {
                        <div class="progress" style="width:30%">
                            <div class="progress-bar" role="progressbar" style=@($"width: {LearnerProgress}%") aria-valuenow="50" aria-valuemin="0" aria-valuemax="100">@($"{LearnerProgress}%")</div>
                        </div>
                    }
                    else
                    {
                        <div class="progress d-flex flex-column justify-content-center" style="width:30%">
                            <div class="progress-bar" role="progressbar" style="width:0" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100">0%</div>
                            <span style="align-content:center">0%</span>
                        </div>
                    }

                    <div>
                        <button class="btn btn-outline-primary btn-sm" @onclick="OnGoToCourseClicked">Go to course</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public CoursesListItem Course { get; set; } = default!;

    [Parameter]
    public EventCallback<string> CourseSelected { get; set; }

    [Parameter]
    public EventCallback<string> BookmarkToggled { get; set; }

    [Parameter]
    public EventCallback<string> GoToCourseClicked { get; set; }

    private string BookmarkIcon => Course.IsBookmarked ? "<i class=\"fa-solid fa-bookmark\" title=\"Unbookmark this course \"></i>" : "<i class=\"fa-regular fa-bookmark\" title=\"Bookmark this course \"></i>";

    private async Task ToggleBookmark()
    {
        await BookmarkToggled.InvokeAsync(Course.Id);
    }

    private async Task OnCourseSelected()
    {
        await CourseSelected.InvokeAsync(Course.Id);
    }

    private async Task OnGoToCourseClicked()
    {
        await GoToCourseClicked.InvokeAsync(Course.Id);
    }

    private int LearnerProgress => (int)(Course.LearnerProgress * 100);
}